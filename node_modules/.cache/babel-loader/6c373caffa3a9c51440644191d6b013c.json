{"ast":null,"code":"var _jsxFileName = \"/Users/marycollins/Documents/mary-collins/portfolio-2021/src/components/phone/phone.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport gsap from 'gsap';\nimport style from './phone.scss';\nimport phoneImage from './img/google-pixel-5.png';\nimport { _sortPropTweensByPriority } from 'gsap/gsap-core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Phone = props => {\n  _s();\n\n  const screens = ['urbana1.jpg', 'urbana2.jpg', 'urbana3.jpg', 'urbana4.jpg', 'urbana5.jpg']; // let screen_divs = Array.prototype.slice.call(document.querySelectorAll('.phoneScreen_img'))\n  // var reversed_images = screen_divs.reverse()\n\n  useEffect(() => {\n    const list = document.querySelectorAll('.phoneScreen_img'); // NodeList\n\n    const ar = [].slice.call(list); // BOOM, returns an array.\n\n    const reverse_ar = ar.reverse();\n    gsap.to(reverse_ar, {\n      x: '+=100',\n      opacity: 0,\n      duration: 1,\n      stagger: 1 // space each element's animation out by 0.5 seconds\n\n    }); // gsap.staggerTo(reversed_images, {autoAlpha:0\n  });\n  let deviceImageArray;\n\n  if (props.deviceImages) {\n    const images = props.deviceImages;\n    deviceImageArray = images.map(image => /*#__PURE__*/_jsxDEV(\"img\", {\n      className: 'phoneScreen_img' + _sortPropTweensByPriority.is,\n      src: '/assets/img/' + image\n    }, image, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper-phone\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"phone\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"phone--pixel\",\n        src: phoneImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"phone--slideshow\",\n        children: deviceImageArray\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Phone, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Phone;\nexport default Phone;\n\nvar _c;\n\n$RefreshReg$(_c, \"Phone\");","map":{"version":3,"sources":["/Users/marycollins/Documents/mary-collins/portfolio-2021/src/components/phone/phone.js"],"names":["React","useEffect","gsap","style","phoneImage","_sortPropTweensByPriority","Phone","props","screens","list","document","querySelectorAll","ar","slice","call","reverse_ar","reverse","to","x","opacity","duration","stagger","deviceImageArray","deviceImages","images","map","image","is"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,yBAAT,QAA0C,gBAA1C;;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AAAA;;AACrB,QAAMC,OAAO,GAAG,CAAC,aAAD,EAAgB,aAAhB,EAA+B,aAA/B,EAA8C,aAA9C,EAA6D,aAA7D,CAAhB,CADqB,CAErB;AACA;;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,IAAI,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,kBAA1B,CAAb,CADc,CAC6C;;AAC3D,UAAMC,EAAE,GAAG,GAAGC,KAAH,CAASC,IAAT,CAAcL,IAAd,CAAX,CAFc,CAEiB;;AAC/B,UAAMM,UAAU,GAAGH,EAAE,CAACI,OAAH,EAAnB;AACAd,IAAAA,IAAI,CAACe,EAAL,CAAQF,UAAR,EAAoB;AAClBG,MAAAA,CAAC,EAAE,OADe;AAElBC,MAAAA,OAAO,EAAE,CAFS;AAGlBC,MAAAA,QAAQ,EAAE,CAHQ;AAIlBC,MAAAA,OAAO,EAAE,CAJS,CAIP;;AAJO,KAApB,EAJc,CAUd;AACD,GAXQ,CAAT;AAYA,MAAIC,gBAAJ;;AACA,MAAIf,KAAK,CAACgB,YAAV,EAAwB;AACtB,UAAMC,MAAM,GAAGjB,KAAK,CAACgB,YAArB;AACAD,IAAAA,gBAAgB,GAAGE,MAAM,CAACC,GAAP,CAAYC,KAAD,iBAC5B;AAAK,MAAA,SAAS,EAAE,oBAAoBrB,yBAAyB,CAACsB,EAA9D;AAA8E,MAAA,GAAG,EAAE,iBAAiBD;AAApG,OAAuEA,KAAvE;AAAA;AAAA;AAAA;AAAA,YADiB,CAAnB;AAGD;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,2BAEE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAA8B,QAAA,GAAG,EAAEtB;AAAnC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,kBAEGkB;AAFH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CArCD;;GAAMhB,K;;KAAAA,K;AAuCN,eAAeA,KAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport gsap from 'gsap'\nimport style from './phone.scss'\nimport phoneImage from './img/google-pixel-5.png'\nimport { _sortPropTweensByPriority } from 'gsap/gsap-core'\n\nconst Phone = props => {\n  const screens = ['urbana1.jpg', 'urbana2.jpg', 'urbana3.jpg', 'urbana4.jpg', 'urbana5.jpg']\n  // let screen_divs = Array.prototype.slice.call(document.querySelectorAll('.phoneScreen_img'))\n  // var reversed_images = screen_divs.reverse()\n\n  useEffect(() => {\n    const list = document.querySelectorAll('.phoneScreen_img') // NodeList\n    const ar = [].slice.call(list) // BOOM, returns an array.\n    const reverse_ar = ar.reverse()\n    gsap.to(reverse_ar, {\n      x: '+=100',\n      opacity: 0,\n      duration: 1,\n      stagger: 1 // space each element's animation out by 0.5 seconds\n    })\n    // gsap.staggerTo(reversed_images, {autoAlpha:0\n  })\n  let deviceImageArray\n  if (props.deviceImages) {\n    const images = props.deviceImages\n    deviceImageArray = images.map((image) =>\n      <img className={'phoneScreen_img' + _sortPropTweensByPriority.is} key={image} src={'/assets/img/' + image} />\n    )\n  }\n  return (\n    <div className='wrapper-phone'>\n\n      <div className='phone'>\n        <img className='phone--pixel' src={phoneImage} />\n        <div className='phone--slideshow'>\n\n          {deviceImageArray}\n        </div>\n      </div>\n\n    </div>\n  )\n}\n\nexport default Phone\n"]},"metadata":{},"sourceType":"module"}