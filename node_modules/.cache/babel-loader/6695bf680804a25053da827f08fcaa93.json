{"ast":null,"code":"var _jsxFileName = \"/Users/marycollins/Documents/mary-collins/portfolio-2021/src/components/work/work-panel.js\",\n    _s = $RefreshSig$();\n\nimport React, { useLayoutEffect, useState } from 'react';\nimport { Parallax } from 'react-scroll-parallax';\nimport Phone from '../phone/phone.js';\nimport Laptop from '../laptop/laptop.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Workpanel = props => {\n  _s();\n\n  useEffect(() => {\n    resizeWindow();\n    window.addEventListener('resize', resizeWindow);\n    return () => window.removeEventListener('resize', resizeWindow);\n  }, []);\n  let alignClass = 'copyLeft';\n  props.align === 'copy-left' ? alignClass = 'copy-left' : alignClass = 'copy-right';\n  {\n    /* Let's get our challenges array and convert the elements to list items. */\n  }\n  let challengeItems;\n\n  if (props.challenges) {\n    const challenges = props.challenges;\n    challengeItems = challenges.map(challenge => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: challenge\n    }, challenge, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this));\n  }\n\n  {\n    /* Let's get our tabs array and convert the elements to list items. */\n  }\n  let listItems;\n\n  if (props.tabs) {\n    const tabs = props.tabs;\n    listItems = tabs.map(tab => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: tab\n    }, tab, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this));\n  }\n\n  const renderLink = () => {\n    if (props.link) {\n      return /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"section-work--link btn\",\n        href: props.link,\n        rel: \"nofollow\",\n        children: \"Go to Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  let deviceMarkup;\n\n  if (props.device == 'phone') {\n    deviceMarkup = /*#__PURE__*/_jsxDEV(Phone, {\n      id: props.id,\n      device: props.device,\n      deviceImages: props.deviceImages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 20\n    }, this);\n  } else if (props.device == 'laptop') {\n    deviceMarkup = /*#__PURE__*/_jsxDEV(Laptop, {\n      id: props.id,\n      device: props.device,\n      deviceImages: props.deviceImages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 20\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'section section-work ' + alignClass,\n    children: [ShowWindowDimensions, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-work--image\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Parallax, {\n        className: \"work-image--bg\",\n        y: [0, 60],\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: '/assets/img/' + props.bgImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"work-image--circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Parallax, {\n        className: \"work-image--fg\",\n        y: [-40, 40],\n        children: deviceMarkup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-work--copy\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          color: props.color\n        },\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 43\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.copy\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Parallax, {\n      className: \"section-work--base\",\n      y: [0, 100],\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [challengeItems && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"The key challenges for this project included:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 30\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"tabs--challenges\",\n          children: challengeItems\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"tabs--skills\",\n          children: listItems\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), renderLink()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Workpanel, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Workpanel;\nexport default Workpanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"Workpanel\");","map":{"version":3,"sources":["/Users/marycollins/Documents/mary-collins/portfolio-2021/src/components/work/work-panel.js"],"names":["React","useLayoutEffect","useState","Parallax","Phone","Laptop","Workpanel","props","useEffect","resizeWindow","window","addEventListener","removeEventListener","alignClass","align","challengeItems","challenges","map","challenge","listItems","tabs","tab","renderLink","link","deviceMarkup","device","id","deviceImages","ShowWindowDimensions","bgImage","color","title","copy"],"mappings":"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","sourcesContent":["import React, { useLayoutEffect, useState } from 'react'\nimport { Parallax } from 'react-scroll-parallax'\nimport Phone from '../phone/phone.js'\nimport Laptop from '../laptop/laptop.js'\nconst Workpanel = props => {\n  useEffect(() => {\n    resizeWindow()\n    window.addEventListener('resize', resizeWindow)\n    return () => window.removeEventListener('resize', resizeWindow)\n  }, [])\n\n  let alignClass = 'copyLeft'\n  props.align === 'copy-left' ? alignClass = 'copy-left' : alignClass = 'copy-right'\n  { /* Let's get our challenges array and convert the elements to list items. */ }\n  let challengeItems\n  if (props.challenges) {\n    const challenges = props.challenges\n    challengeItems = challenges.map((challenge) =>\n      <li key={challenge}>\n        {challenge}\n      </li>\n    )\n  }\n\n  { /* Let's get our tabs array and convert the elements to list items. */ }\n  let listItems\n  if (props.tabs) {\n    const tabs = props.tabs\n    listItems = tabs.map((tab) =>\n      <li key={tab}>\n        {tab}\n      </li>\n    )\n  }\n\n  const renderLink = () => {\n    if (props.link) {\n      return <a className='section-work--link btn' href={props.link} rel='nofollow'>Go to Project</a>\n    }\n  }\n  let deviceMarkup\n  if (props.device == 'phone') {\n    deviceMarkup = <Phone id={props.id} device={props.device} deviceImages={props.deviceImages} />\n  } else if (props.device == 'laptop') {\n    deviceMarkup = <Laptop id={props.id} device={props.device} deviceImages={props.deviceImages} />\n  }\n\n  return (\n\n    <div className={'section section-work ' + alignClass}>\n      {ShowWindowDimensions}\n      <div className='section-work--image'>\n        <div />\n        <Parallax className='work-image--bg' y={[0, 60]}>\n          <img src={'/assets/img/' + props.bgImage} />\n        </Parallax>\n        <div className='work-image--circle' />\n        <Parallax className='work-image--fg' y={[-40, 40]}>\n          {deviceMarkup}\n\n        </Parallax>\n\n      </div>\n      <div className='section-work--copy'><h2 style={{ color: props.color }}>{props.title}</h2>\n        <p>{props.copy}</p>\n\n      </div>\n\n      <Parallax className='section-work--base' y={[0, 100]}>\n        <div>\n          {challengeItems && <p>The key challenges for this project included:</p>}\n\n          <ul className='tabs--challenges'>{challengeItems}</ul>\n          <ul className='tabs--skills'>{listItems}</ul>\n\n          {renderLink()}\n        </div>\n      </Parallax>\n\n    </div>\n  )\n}\n\nexport default Workpanel\n"]},"metadata":{},"sourceType":"module"}