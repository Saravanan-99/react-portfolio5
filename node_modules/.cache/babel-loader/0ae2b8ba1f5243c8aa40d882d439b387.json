{"ast":null,"code":"var _jsxFileName = \"/Users/marycollins/Documents/mary-collins/portfolio-2021/src/components/work/work-panel.js\";\nimport React from 'react';\nimport { Parallax } from 'react-scroll-parallax';\nimport Phone from '../phone/phone.js';\nimport Laptop from '../laptop/laptop.js';\nimport style from './work.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Workpanel = props => {\n  const alignClass = 'copyLeft';\n  {\n    /* Let's get our challenges array and convert the elements to list items. */\n  }\n  let challengeItems;\n\n  if (props.challenges) {\n    const challenges = props.challenges;\n    challengeItems = challenges.map(challenge => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: challenge\n    }, challenge, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this));\n  }\n\n  {\n    /* Let's get our tabs array and convert the elements to list items. */\n  }\n  let listItems;\n\n  if (props.tabs) {\n    const tabs = props.tabs;\n    listItems = tabs.map(tab => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: tab\n    }, tab, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this));\n  }\n\n  const renderLink = () => {\n    if (props.link) {\n      return /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"section-work--link btn\",\n        href: props.link,\n        rel: \"nofollow\",\n        children: \"Go to Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  let deviceMarkup;\n\n  if (props.device == 'phone') {\n    deviceMarkup = /*#__PURE__*/_jsxDEV(Phone, {\n      id: props.id,\n      device: props.device,\n      deviceImages: props.deviceImages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 20\n    }, this);\n  } else if (props.device == 'laptop') {\n    deviceMarkup = /*#__PURE__*/_jsxDEV(Laptop, {\n      id: props.id,\n      device: props.device,\n      deviceImages: props.deviceImages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 20\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'section section-work ' + alignClass,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-work--image\",\n      children: [/*#__PURE__*/_jsxDEV(Parallax, {\n        className: \"work-image--bg\",\n        y: [0, 60],\n        tagOuter: \"figure\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: '/assets/img/' + props.bgImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Parallax, {\n        className: \"work-image--fg\",\n        y: [-40, 40],\n        tagOuter: \"figure\",\n        children: deviceMarkup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-work--copy\",\n      \"data-aos\": copyAnimation,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          color: props.color\n        },\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 68\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.copy\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), challengeItems && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"The key challenges for this project included:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"tabs--challenges\",\n        children: challengeItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"tabs--skills\",\n        children: listItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), renderLink()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Workpanel;\nexport default Workpanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"Workpanel\");","map":{"version":3,"sources":["/Users/marycollins/Documents/mary-collins/portfolio-2021/src/components/work/work-panel.js"],"names":["React","Parallax","Phone","Laptop","style","Workpanel","props","alignClass","challengeItems","challenges","map","challenge","listItems","tabs","tab","renderLink","link","deviceMarkup","device","id","deviceImages","bgImage","copyAnimation","color","title","copy"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Parallax } from 'react-scroll-parallax'\nimport Phone from '../phone/phone.js'\nimport Laptop from '../laptop/laptop.js'\nimport style from './work.scss'\nconst Workpanel = props => {\n  const alignClass = 'copyLeft'\n\n  { /* Let's get our challenges array and convert the elements to list items. */ }\n  let challengeItems\n  if (props.challenges) {\n    const challenges = props.challenges\n    challengeItems = challenges.map((challenge) =>\n      <li key={challenge}>\n        {challenge}\n      </li>\n    )\n  }\n\n  { /* Let's get our tabs array and convert the elements to list items. */ }\n  let listItems\n  if (props.tabs) {\n    const tabs = props.tabs\n    listItems = tabs.map((tab) =>\n      <li key={tab}>\n        {tab}\n      </li>\n    )\n  }\n\n  const renderLink = () => {\n    if (props.link) {\n      return <a className='section-work--link btn' href={props.link} rel='nofollow'>Go to Project</a>\n    }\n  }\n  let deviceMarkup\n  if (props.device == 'phone') {\n    deviceMarkup = <Phone id={props.id} device={props.device} deviceImages={props.deviceImages} />\n  } else if (props.device == 'laptop') {\n    deviceMarkup = <Laptop id={props.id} device={props.device} deviceImages={props.deviceImages} />\n  }\n\n  return (\n\n    <div className={'section section-work ' + alignClass}>\n\n      <div className='section-work--image'>\n\n        <Parallax className='work-image--bg' y={[0, 60]} tagOuter='figure'>\n          <img src={'/assets/img/' + props.bgImage} />\n        </Parallax>\n        <Parallax className='work-image--fg' y={[-40, 40]} tagOuter='figure'>\n          {deviceMarkup}\n\n        </Parallax>\n\n      </div>\n      <div className='section-work--copy' data-aos={copyAnimation}><h2 style={{ color: props.color }}>{props.title}</h2>\n        <p>{props.copy}</p>\n\n        {challengeItems && <p>The key challenges for this project included:</p>}\n\n        <ul className='tabs--challenges'>{challengeItems}</ul>\n        <ul className='tabs--skills'>{listItems}</ul>\n\n        {renderLink()}\n\n      </div>\n    </div>\n  )\n}\n\nexport default Workpanel\n"]},"metadata":{},"sourceType":"module"}