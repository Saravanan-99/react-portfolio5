{"ast":null,"code":"import React from'react';import{Parallax}from'react-scroll-parallax';import Phone from'../phone/phone.js';import Laptop from'../laptop/laptop.js';import{ReactComponent as Shape4}from\"@svgr/webpack?-svgo,+titleProp,+ref!../hero/img/shape-4.svg\";import Image from'../parallaxImage.js';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Workpanel=function Workpanel(props){var alignClass='copyLeft';props.align==='copy-left'?alignClass='copy-left':alignClass='copy-right';// Let's get our challenges array and convert the elements to list items.\nvar challengeItems;if(props.challenges){var challenges=props.challenges;challengeItems=challenges.map(function(challenge){return/*#__PURE__*/_jsx(\"li\",{children:challenge},challenge);});}// Let's get our tabs array and convert the elements to list items.\nvar listItems;if(props.tabs){var tabs=props.tabs;listItems=tabs.map(function(tab){return/*#__PURE__*/_jsx(\"li\",{children:tab},tab);});}// Render the button if a link is supplied.\nvar renderLink=function renderLink(){if(props.link){return/*#__PURE__*/_jsx(\"a\",{className:\"section-work--link btn\",href:props.link,rel:\"nofollow\",children:\"Go to Project\"});}};// Setup device markup (laptop or phone).\nvar deviceMarkup;if(props.device==='phone'){deviceMarkup=/*#__PURE__*/_jsx(Phone,{id:props.id,device:props.device,deviceImages:props.deviceImages});}else if(props.device==='laptop'){deviceMarkup=/*#__PURE__*/_jsx(Laptop,{id:props.id,device:props.device,deviceImages:props.deviceImages});}return/*#__PURE__*/_jsxs(\"div\",{className:'section section-work '+alignClass,style:{backgroundColor:props.bgColor},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-work--image\",children:[/*#__PURE__*/_jsx(\"div\",{}),/*#__PURE__*/_jsx(Parallax,{className:\"work-image--bg\",disabled:props.parallaxDisabled,y:[-10,10],children:/*#__PURE__*/_jsx(Image,{src:'/assets/img/'+props.bgImage})}),/*#__PURE__*/_jsx(\"div\",{className:\"work-image--shape\",children:/*#__PURE__*/_jsx(Shape4,{})}),/*#__PURE__*/_jsx(Parallax,{className:\"work-image--fg\",y:[-60,0],disabled:props.parallaxDisabled,children:deviceMarkup})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"section-work--copy\",children:[/*#__PURE__*/_jsx(\"h2\",{style:{color:props.color},children:props.title}),/*#__PURE__*/_jsx(\"p\",{children:props.copy})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"section-work--base\",children:[challengeItems&&/*#__PURE__*/_jsx(\"p\",{children:\"The key challenges for this project included:\"}),/*#__PURE__*/_jsx(\"ul\",{className:\"tabs--challenges\",children:challengeItems}),/*#__PURE__*/_jsx(\"ul\",{className:\"tabs--skills\",children:listItems}),renderLink()]})]});};export default Workpanel;","map":{"version":3,"sources":["/Users/marycollins/Documents/mary-collins/portfolio-2021/src/components/work/work-panel.js"],"names":["React","Parallax","Phone","Laptop","Image","Workpanel","props","alignClass","align","challengeItems","challenges","map","challenge","listItems","tabs","tab","renderLink","link","deviceMarkup","device","id","deviceImages","backgroundColor","bgColor","parallaxDisabled","bgImage","color","title","copy"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Parallax } from 'react-scroll-parallax'\nimport Phone from '../phone/phone.js'\nimport Laptop from '../laptop/laptop.js'\nimport { ReactComponent as Shape4 } from '../hero/img/shape-4.svg'\nimport Image from '../parallaxImage.js'\n\nconst Workpanel = props => {\n  let alignClass = 'copyLeft'\n  props.align === 'copy-left' ? alignClass = 'copy-left' : alignClass = 'copy-right'\n  // Let's get our challenges array and convert the elements to list items.\n  let challengeItems\n  if (props.challenges) {\n    const challenges = props.challenges\n    challengeItems = challenges.map((challenge) =>\n      <li key={challenge}>\n        {challenge}\n      </li>\n    )\n  }\n\n  // Let's get our tabs array and convert the elements to list items.\n  let listItems\n  if (props.tabs) {\n    const tabs = props.tabs\n    listItems = tabs.map((tab) =>\n      <li key={tab}>\n        {tab}\n      </li>\n    )\n  }\n\n  // Render the button if a link is supplied.\n  const renderLink = () => {\n    if (props.link) {\n      return <a className='section-work--link btn' href={props.link} rel='nofollow'>Go to Project</a>\n    }\n  }\n\n  // Setup device markup (laptop or phone).\n  let deviceMarkup\n  if (props.device === 'phone') {\n    deviceMarkup = <Phone id={props.id} device={props.device} deviceImages={props.deviceImages} />\n  } else if (props.device === 'laptop') {\n    deviceMarkup = <Laptop id={props.id} device={props.device} deviceImages={props.deviceImages} />\n  }\n\n  return (\n\n    <div className={'section section-work ' + alignClass} style={{ backgroundColor: props.bgColor }}>\n\n      <div className='section-work--image'>\n        <div />\n        <Parallax\n          className='work-image--bg'\n          disabled={props.parallaxDisabled}\n          y={[-10, 10]}\n        >\n          <Image src={'/assets/img/' + props.bgImage} />\n        </Parallax>\n        <div className='work-image--shape'>\n          <Shape4 />\n        </div>\n        <Parallax className='work-image--fg' y={[-60, 0]} disabled={props.parallaxDisabled}>\n          {deviceMarkup}\n\n        </Parallax>\n\n      </div>\n      <div className='section-work--copy'><h2 style={{ color: props.color }}>{props.title}</h2>\n        <p>{props.copy}</p>\n\n      </div>\n\n      <div className='section-work--base'>\n        {challengeItems && <p>The key challenges for this project included:</p>}\n\n        <ul className='tabs--challenges'>{challengeItems}</ul>\n        <ul className='tabs--skills'>{listItems}</ul>\n\n        {renderLink()}\n      </div>\n\n    </div>\n  )\n}\n\nexport default Workpanel\n"]},"metadata":{},"sourceType":"module"}