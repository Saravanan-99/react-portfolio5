{"ast":null,"code":"var _jsxFileName = \"/Users/marycollins/Documents/mary-collins/portfolio-2021/src/components/work/work-panel.js\";\nimport React from \"react\";\nimport { Parallax } from \"react-scroll-parallax\";\nimport Phone from \"../phone/phone.js\";\nimport Laptop from \"../laptop/laptop.js\";\nimport { ReactComponent as Shape4 } from \"@svgr/webpack?-svgo,+titleProp,+ref!./img/shape-4-outline.svg\";\nimport Image from \"../parallaxImage.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Workpanel = props => {\n  let alignClass = \"copyLeft\";\n  props.align === \"copy-left\" ? alignClass = \"copy-left\" : alignClass = \"copy-right\"; // Let's get our challenges array and convert the elements to list items.\n\n  let challengeItems;\n\n  if (props.challenges) {\n    const challenges = props.challenges;\n    challengeItems = challenges.map(challenge => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: challenge\n    }, challenge, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this));\n  } // Setup our Role display if prop has been supplied\n\n\n  const renderRole = () => {\n    if (props.role) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tabs--role\",\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Role: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), props.role]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this);\n    }\n  }; // Render the button if a link is supplied.\n\n\n  const renderLink = () => {\n    if (props.link) {\n      return /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"section-work--link btn\",\n        href: props.link,\n        rel: \"noreferrer nofollow\",\n        children: \"Go to Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this);\n    }\n  }; // Setup device markup (laptop or phone).\n\n\n  let deviceMarkup;\n\n  if (props.device === \"phone\") {\n    deviceMarkup = /*#__PURE__*/_jsxDEV(Phone, {\n      id: props.id,\n      device: props.device,\n      deviceImages: props.deviceImages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  } else if (props.device === \"laptop\") {\n    deviceMarkup = /*#__PURE__*/_jsxDEV(Laptop, {\n      id: props.id,\n      device: props.device,\n      deviceImages: props.deviceImages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"section section-work \" + alignClass,\n    style: {\n      backgroundColor: props.bgColor\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-work--image\",\n      children: [/*#__PURE__*/_jsxDEV(Parallax, {\n        className: \"work-image--bg\",\n        disabled: props.parallaxDisabled,\n        y: [-10, 10],\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: \"/assets/img/\" + props.bgImage,\n          alt: props.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"work-image--shape\",\n        children: /*#__PURE__*/_jsxDEV(Shape4, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Parallax, {\n        className: \"work-image--fg\",\n        y: [-60, 0],\n        disabled: props.parallaxDisabled,\n        children: deviceMarkup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-work--copy\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          color: props.color\n        },\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.copy\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-work--base\",\n      children: [challengeItems && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"The key challenges for this project included:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"tabs--challenges\",\n        children: challengeItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), renderRole(), renderLink()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Workpanel;\nexport default Workpanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"Workpanel\");","map":{"version":3,"sources":["/Users/marycollins/Documents/mary-collins/portfolio-2021/src/components/work/work-panel.js"],"names":["React","Parallax","Phone","Laptop","Image","Workpanel","props","alignClass","align","challengeItems","challenges","map","challenge","renderRole","role","renderLink","link","deviceMarkup","device","id","deviceImages","backgroundColor","bgColor","parallaxDisabled","bgImage","color","title","copy"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAEA,OAAOC,KAAP,MAAkB,qBAAlB;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3B,MAAIC,UAAU,GAAG,UAAjB;AACAD,EAAAA,KAAK,CAACE,KAAN,KAAgB,WAAhB,GACKD,UAAU,GAAG,WADlB,GAEKA,UAAU,GAAG,YAFlB,CAF2B,CAK3B;;AACA,MAAIE,cAAJ;;AACA,MAAIH,KAAK,CAACI,UAAV,EAAsB;AACpB,UAAMA,UAAU,GAAGJ,KAAK,CAACI,UAAzB;AACAD,IAAAA,cAAc,GAAGC,UAAU,CAACC,GAAX,CAAgBC,SAAD,iBAC9B;AAAA,gBAAqBA;AAArB,OAASA,SAAT;AAAA;AAAA;AAAA;AAAA,YADe,CAAjB;AAGD,GAZ0B,CAc3B;;;AAEA,QAAMC,UAAU,GAAG,MAAM;AACvB,QAAIP,KAAK,CAACQ,IAAV,EAAgB;AACd,0BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGR,KAAK,CAACQ,IAFT;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAMD;AACF,GATD,CAhB2B,CA2B3B;;;AACA,QAAMC,UAAU,GAAG,MAAM;AACvB,QAAIT,KAAK,CAACU,IAAV,EAAgB;AACd,0BACE;AACE,QAAA,SAAS,EAAC,wBADZ;AAEE,QAAA,IAAI,EAAEV,KAAK,CAACU,IAFd;AAGE,QAAA,GAAG,EAAC,qBAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AASD;AACF,GAZD,CA5B2B,CA0C3B;;;AACA,MAAIC,YAAJ;;AACA,MAAIX,KAAK,CAACY,MAAN,KAAiB,OAArB,EAA8B;AAC5BD,IAAAA,YAAY,gBACV,QAAC,KAAD;AACE,MAAA,EAAE,EAAEX,KAAK,CAACa,EADZ;AAEE,MAAA,MAAM,EAAEb,KAAK,CAACY,MAFhB;AAGE,MAAA,YAAY,EAAEZ,KAAK,CAACc;AAHtB;AAAA;AAAA;AAAA;AAAA,YADF;AAOD,GARD,MAQO,IAAId,KAAK,CAACY,MAAN,KAAiB,QAArB,EAA+B;AACpCD,IAAAA,YAAY,gBACV,QAAC,MAAD;AACE,MAAA,EAAE,EAAEX,KAAK,CAACa,EADZ;AAEE,MAAA,MAAM,EAAEb,KAAK,CAACY,MAFhB;AAGE,MAAA,YAAY,EAAEZ,KAAK,CAACc;AAHtB;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAED,sBACE;AACE,IAAA,SAAS,EAAE,0BAA0Bb,UADvC;AAEE,IAAA,KAAK,EAAE;AAAEc,MAAAA,eAAe,EAAEf,KAAK,CAACgB;AAAzB,KAFT;AAAA,4BAIE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,8BACE,QAAC,QAAD;AACE,QAAA,SAAS,EAAC,gBADZ;AAEE,QAAA,QAAQ,EAAEhB,KAAK,CAACiB,gBAFlB;AAGE,QAAA,CAAC,EAAE,CAAC,CAAC,EAAF,EAAM,EAAN,CAHL;AAAA,+BAKE,QAAC,KAAD;AAAO,UAAA,GAAG,EAAE,iBAAiBjB,KAAK,CAACkB,OAAnC;AAA4C,UAAA,GAAG,EAAElB,KAAK,CAACa;AAAvD;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,+BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cARF,eAWE,QAAC,QAAD;AACE,QAAA,SAAS,EAAC,gBADZ;AAEE,QAAA,CAAC,EAAE,CAAC,CAAC,EAAF,EAAM,CAAN,CAFL;AAGE,QAAA,QAAQ,EAAEb,KAAK,CAACiB,gBAHlB;AAAA,kBAKGN;AALH;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAuBE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,8BACE;AAAI,QAAA,KAAK,EAAE;AAAEQ,UAAAA,KAAK,EAAEnB,KAAK,CAACmB;AAAf,SAAX;AAAA,kBAAoCnB,KAAK,CAACoB;AAA1C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAIpB,KAAK,CAACqB;AAAV;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAvBF,eA4BE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,iBACGlB,cAAc,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADrB,eAGE;AAAI,QAAA,SAAS,EAAC,kBAAd;AAAA,kBAAkCA;AAAlC;AAAA;AAAA;AAAA;AAAA,cAHF,EAKGI,UAAU,EALb,EAMGE,UAAU,EANb;AAAA;AAAA;AAAA;AAAA;AAAA,YA5BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuCD,CArGD;;KAAMV,S;AAuGN,eAAeA,SAAf","sourcesContent":["import React from \"react\";\nimport { Parallax } from \"react-scroll-parallax\";\nimport Phone from \"../phone/phone.js\";\nimport Laptop from \"../laptop/laptop.js\";\nimport { ReactComponent as Shape4 } from \"./img/shape-4-outline.svg\";\nimport Image from \"../parallaxImage.js\";\n\nconst Workpanel = (props) => {\n  let alignClass = \"copyLeft\";\n  props.align === \"copy-left\"\n    ? (alignClass = \"copy-left\")\n    : (alignClass = \"copy-right\");\n  // Let's get our challenges array and convert the elements to list items.\n  let challengeItems;\n  if (props.challenges) {\n    const challenges = props.challenges;\n    challengeItems = challenges.map((challenge) => (\n      <li key={challenge}>{challenge}</li>\n    ));\n  }\n\n  // Setup our Role display if prop has been supplied\n\n  const renderRole = () => {\n    if (props.role) {\n      return (\n        <div className=\"tabs--role\">\n          <b>Role: </b>\n          {props.role}\n        </div>\n      );\n    }\n  };\n\n  // Render the button if a link is supplied.\n  const renderLink = () => {\n    if (props.link) {\n      return (\n        <a\n          className=\"section-work--link btn\"\n          href={props.link}\n          rel=\"noreferrer nofollow\"\n        >\n          Go to Project\n        </a>\n      );\n    }\n  };\n\n  // Setup device markup (laptop or phone).\n  let deviceMarkup;\n  if (props.device === \"phone\") {\n    deviceMarkup = (\n      <Phone\n        id={props.id}\n        device={props.device}\n        deviceImages={props.deviceImages}\n      />\n    );\n  } else if (props.device === \"laptop\") {\n    deviceMarkup = (\n      <Laptop\n        id={props.id}\n        device={props.device}\n        deviceImages={props.deviceImages}\n      />\n    );\n  }\n\n  return (\n    <div\n      className={\"section section-work \" + alignClass}\n      style={{ backgroundColor: props.bgColor }}\n    >\n      <div className=\"section-work--image\">\n        <Parallax\n          className=\"work-image--bg\"\n          disabled={props.parallaxDisabled}\n          y={[-10, 10]}\n        >\n          <Image src={\"/assets/img/\" + props.bgImage} alt={props.id} />\n        </Parallax>\n        <div className=\"work-image--shape\">\n          <Shape4 />\n        </div>\n        <Parallax\n          className=\"work-image--fg\"\n          y={[-60, 0]}\n          disabled={props.parallaxDisabled}\n        >\n          {deviceMarkup}\n        </Parallax>\n      </div>\n      <div className=\"section-work--copy\">\n        <h2 style={{ color: props.color }}>{props.title}</h2>\n        <p>{props.copy}</p>\n      </div>\n\n      <div className=\"section-work--base\">\n        {challengeItems && <p>The key challenges for this project included:</p>}\n\n        <ul className=\"tabs--challenges\">{challengeItems}</ul>\n\n        {renderRole()}\n        {renderLink()}\n      </div>\n    </div>\n  );\n};\n\nexport default Workpanel;\n"]},"metadata":{},"sourceType":"module"}